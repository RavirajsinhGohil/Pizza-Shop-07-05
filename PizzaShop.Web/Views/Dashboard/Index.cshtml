@{
    ViewData["Title"] = "Dashboard";
}

<div class="add_user_heading d-flex justify-content-between">
    <div class="fw-bold fs-2">Dashboard</div>
    <div class="d-flex">
        @* <a asp-controller="User" asp-action="UserList" class="btn btn-primary ms-3">&lt; Back</a> *@
        <select class="form-select dropdown">
            <option>Current Month</option>
        </select>
    </div>
</div>

<div class="add_user_form" style="background-color: #F2F2F2;">
    <div class="row mx-2 ">
        <div class="col m-2" style="height: 20vh; background-color: white; border-radius: 10px; ">
            1
        </div>
        <div class="col m-2" style="height: 20vh; background-color: white; border-radius: 10px;">
            2
        </div>
        <div class="col m-2" style="height: 20vh; background-color: white; border-radius: 10px;">
            3
        </div>
        <div class="col m-2" style="height: 20vh; background-color: white; border-radius: 10px;">
            4
        </div>
    </div>

    <div class="row mx-2">
        <div class="col m-2" style="height: 20vh; background-color: white; border-radius: 10px;">
            5
        </div>
        <div class="col m-2" style="height: 20vh; background-color: white; border-radius: 10px;">
            6
        </div>
    </div>

    <div class="row mx-2">
        <div class="col m-2" style="height: 20vh; background-color: white; border-radius: 10px;">
            7
        </div>
        <div class="col m-2" style="height: 20vh; background-color: white; border-radius: 10px;">
            8
        </div>
        <div class="col m-2" style="height: 20vh; background-color: white; border-radius: 10px;">
            9
        </div>
        <div class="col m-2" style="height: 20vh; background-color: white; border-radius: 10px;">
            10
        </div>
    </div>
</div>




@model DAL.ViewModels.DashboardViewModel
@{
    @* Layout = "~/Views/Shared/_DashboardLayout.cshtml"; *@
    ViewData["Title"] = "Admin Dashboard";
}
<style>
    .dashboard-icon {

        width: 40px;
        height: 40px;
        border-radius: 100%;
    }

    .dashboard-icon-outer {
        width: 60px;
        height: 60px;
        padding: 10px;
    }

    #filterDropdown {
        width: 230px;
    }

    .scrollable-least-items {
        max-height: 190px;
        overflow-y: auto;
        scrollbar-width: thin;
    }
</style>

<div style="background-color: #f2f2f2;">

    @* @ <h1>@ViewData["UserName"]</h1> @ *@
    <div class="d-flex flex-wrap align-items-center justify-content-between px-3 pt-3">
        <h2 class="fw-bold mb-2 special-color">Dashboard</h2>
        <div class="dropdown">
            <button class="dropdown-toggle" type="button" id="filterDropdown" data-bs-toggle="dropdown"
                aria-expanded="false">
                CurrentMonth
            </button>
            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="filterDropdown" style="width: 230px;">
                <li><a class="dropdown-item" href="#" onclick="applyFilter('Today')">Today</a></li>
                <li><a class="dropdown-item" href="#" onclick="applyFilter('Last 7 Days')">Last 7 Days</a></li>
                <li><a class="dropdown-item" href="#" onclick="applyFilter('Last 30 Days')">Last 30 Days</a></li>
                <li><a class="dropdown-item" href="#" onclick="applyFilter('Current Month')">Current Month</a></li>
                <li><a class="dropdown-item" href="#" onclick="applyFilter('Custom Date')">Custom Date</a></li>
            </ul>
        </div>
    </div>

    <div class="container-fluid">
        <div class="row gx-4">

            <div class="col-12 col-md-6 col-lg-3 cards  mt-3">
                <div class="bg-white shadow rounded p-2">
                    <div class="d-flex justify-content-end ">
                        <div class="p-2 d-flex justify-content-center align-items-center dashboard-icon-outer rounded-circle"
                            style="border: 1px solid rgb(93, 214, 93);">
                            <div class="dashboard-icon d-flex justify-content-center align-items-center"
                                style="background-color: rgb(93, 214, 93);">
                                <img src="~/images/icons/total-sales.svg" height="20" width="20" alt="">
                            </div>
                        </div>
                    </div>
                    <div class="d-flex justify-content-start">
                        <h2 class="text-left"> &#x20b9; @Model.TotalSales</h2>
                    </div>
                    <div class="d-flex justify-content-start opacity-50">
                        <span>Total Sales</span>
                    </div>
                </div>

            </div>

            <div class="col-12 col-md-6 col-lg-3 cards mt-3">
                <div class="bg-white shadow rounded p-2">
                    <div class="d-flex justify-content-end">
                        <div class="p-2 d-flex justify-content-center align-items-center dashboard-icon-outer rounded-circle"
                            style="border: 1px solid rgb(255, 118, 255);">
                            <div class="dashboard-icon d-flex justify-content-center align-items-center"
                                style="background-color: rgb(255, 118, 255);">
                                <img src="~/images/icons/total-orders.svg" height="20" width="20" alt="">
                            </div>
                        </div>
                    </div>
                    <div class="d-flex justify-content-start">
                        <h2 class="text-left"> @Model.TotalOrders</h2>
                    </div>
                    <div class="d-flex justify-content-start opacity-50">
                        <span>Total Orders</span>
                    </div>
                </div>

            </div>

            <div class="col-12 col-md-6 col-lg-3 cards mt-3">
                <div class="bg-white shadow rounded p-2">
                    <div class="d-flex justify-content-end">
                        <div class="p-2 d-flex justify-content-center align-items-center dashboard-icon-outer rounded-circle"
                            style="border: 1px solid rgb(180, 180, 180);">
                            <div class="dashboard-icon d-flex justify-content-center align-items-center"
                                style="background-color: rgb(180, 180, 180);">
                                <img src="~/images/icons/total-orders.svg" height="20" width="20" alt="">
                            </div>
                        </div>
                    </div>
                    <div class="d-flex justify-content-start">
                        <h2 class="text-left"> &#x20b9; @Model.AverageOrderValue</h2>
                    </div>
                    <div class="d-flex justify-content-start opacity-50">
                        <span>Avg Order Value</span>
                    </div>
                </div>

            </div>

            <div class="col-12 col-md-6 col-lg-3 cards mt-3">
                <div class="bg-white shadow rounded p-2">
                    <div class="d-flex justify-content-end">
                        <div class="p-2 d-flex justify-content-center align-items-center dashboard-icon-outer rounded-circle"
                            style="border: 1px solid rgb(255, 118, 64);">
                            <div class="dashboard-icon d-flex justify-content-center align-items-center"
                                style="background-color: rgb(255, 118, 64);">
                                <img src="~/images/icons/waiting-time.svg" height="20" width="20" alt="">
                            </div>
                        </div>
                    </div>
                    <div class="d-flex justify-content-start">
                        <h2 class="text-left"> @Model.AverageWaitingTime mins</h2>
                    </div>
                    <div class="d-flex justify-content-start opacity-50">
                        <span>Avg Waiting Time</span>
                    </div>
                </div>

            </div>
        </div>

        <div class="row gx-4">
            <div class="col-lg-6 col-12 cards mt-4">
                <div class="d-flex flex-column bg-white shadow rounded p-2 h-100">
                    <h4>Revenue</h4>
                    <div class="chart">
                        <canvas id="myChart"></canvas>
                    </div>
                </div>
            </div>

            <div class="col-lg-6 col-12 cards mt-4">
                <div class="d-flex flex-column bg-white shadow rounded p-2 h-100">
                    <h4>Customer Growth</h4>
                    <div class="chart">
                        <canvas id="customerGrowthChart"></canvas>
                    </div>
                </div>
            </div>
        </div>

        <div class="row d-flex">
            <div class="col-12 col-md-6 col-lg-3 cards mt-4 scrollable-least-items">
                <div class="d-flex flex-column bg-white shadow rounded p-2 h-100">
                    <h4 class="mb-3">Top Selling Items</h4>
                    <div style="max-height: 300px; overflow-y: auto;">
                        @if (Model.TopSellingItems != null && Model.TopSellingItems.Any())
                        {
                            int rank = 1;
                            foreach (var item in Model.TopSellingItems)
                            {
                                <div class="d-flex justify-content-start align-items-center mb-3">
                                    <span class="fw-bold">#@rank</span>
                                    <img src="@item.ImageUrl" alt="" height="40" width="40" class="mx-2 rounded">
                                    <div class="d-flex flex-column">
                                        <span>@item.Name</span>
                                        <div class="d-flex align-items-center">
                                            <img src="~/images/sidebar icons/menu.png" alt="" width="20" height="20"
                                                class="me-1">
                                            @item.OrderCount Order@(item.OrderCount > 1 ? "s" : "")
                                        </div>
                                    </div>
                                </div>
                                rank++;
                                if (rank <= Model.TopSellingItems.Count)
                                {
                                    <hr class="my-2" />
                                }
                            }
                        }
                        else
                        {
                            <span class="text-muted">No data available.</span>
                        }
                    </div>
                </div>
            </div>
            <div class="col-12 col-md-6 col-lg-3 cards mt-4 scrollable-least-items">
                <div class="d-flex flex-column bg-white shadow rounded p-2 h-100">
                    <h4 class="mb-3">Least Selling Items</h4>
                    <div style="max-height: 300px; overflow-y: auto;">
                        @if (Model.LeastSellingItems != null && Model.LeastSellingItems.Any())
                        {
                            int rank = 1;
                            foreach (var item in Model.LeastSellingItems)
                            {
                                <div class="d-flex justify-content-start align-items-center mb-3">
                                    <span class="fw-bold">#@rank</span>
                                    <img src="@item.ImageUrl" alt="" height="40" width="40" class="mx-2 rounded">
                                    <div class="d-flex flex-column">
                                        <span>@item.Name</span>
                                        <div class="d-flex align-items-center">
                                            <img src="~/images/sidebar icons/menu.png" alt="" width="20" height="20"
                                                class="me-1">
                                            @item.OrderCount Order@(item.OrderCount > 1 ? "s" : "")
                                        </div>
                                    </div>
                                </div>
                                rank++;
                                if (rank <= Model.LeastSellingItems.Count)
                                {
                                    <hr class="my-2" />
                                }
                            }
                        }
                        else
                        {
                            <span class="text-muted">No data available.</span>
                        }
                    </div>
                </div>
            </div>
            <div class="col-12 col-md-6 col-lg-3 cards mt-4">
                <div class="bg-white shadow rounded p-2  h-100 d-flex flex-column justify-content-between">
                    <div class="d-flex justify-content-end">
                        <div class="p-2 d-flex justify-content-center align-items-center dashboard-icon-outer rounded-circle"
                            style="border: 1px solid orange;">
                            <div class="dashboard-icon d-flex justify-content-center align-items-center"
                                style="background-color: orange;">
                                <img src="~/images/icons/waiting-list.svg" height="20" width="20" alt="">
                            </div>
                        </div>
                    </div>
                    <div>
                        <div class="d-flex justify-content-start">
                            <h2 class="text-left">@Model.WaitingListCount</h2>
                        </div>
                        <div class="d-flex justify-content-start opacity-50">
                            <span>Waiting List Count</span>
                        </div>
                    </div>

                </div>
            </div>
            <div class="col-12 col-md-6 col-lg-3 cards mt-4">
                <div class="bg-white shadow rounded p-2  h-100 d-flex flex-column justify-content-between">
                    <div class="d-flex justify-content-end">
                        <div class="p-2 d-flex justify-content-center align-items-center dashboard-icon-outer rounded-circle"
                            style="border: 1px solid orange;">
                            <div class="dashboard-icon d-flex justify-content-center align-items-center"
                                style="background-color: orange;">
                                <img src="~/images/icons/waiting-list.svg" height="20" width="20" alt="">
                            </div>
                        </div>
                    </div>
                    <div>
                        <div class="d-flex justify-content-start">
                            <h2 class="text-left">@Model.NewCustomer</h2>
                        </div>
                        <div class="d-flex justify-content-start opacity-50">
                            <span>New Customer Count</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    function applyFilter(filterType) {
        const url = `@Url.Action("Index", "Home")?filter=${encodeURIComponent(filterType)}`;
        window.location.href = url;
    }

    const revenueCtx = document.getElementById('myChart').getContext('2d');
    const revenueChart = new Chart(revenueCtx, {
        type: 'line',
        data: {
            labels: @Html.Raw(Json.Serialize(Model.RevenueChartData.Select(d => d.Label))),
            datasets: [{
                label: 'Revenue',
                data: @Html.Raw(Json.Serialize(Model.RevenueChartData.Select(d => d.Value))),
                borderColor: 'rgba(75, 192, 192, 1)',
                backgroundColor: 'rgba(75, 192, 192, 0.2)',
                tension: 0.4,
                fill: true
            }]
        }
    });


    const customerCtx = document.getElementById('customerGrowthChart').getContext('2d');
    const customerGrowthChart = new Chart(customerCtx, {
        type: 'line',
        data: {
            labels: @Html.Raw(Json.Serialize(Model.CustomerGrowthData.Select(d => d.Label))),
            datasets: [{
                label: 'Customer Growth',
                data: @Html.Raw(Json.Serialize(Model.CustomerGrowthData.Select(d => d.Value))),
                borderColor: 'rgba(255, 99, 132, 1)',
                backgroundColor: 'rgba(255, 99, 132, 0.2)',
                tension: 0.4,
                fill: true
            }]
        },
        options: {
            responsive: true,
            plugins: {
                legend: { position: 'top' },
                title: {
                    display: true
                }
            },
            scales: {
                y: {
                    beginAtZero: true,
                    ticks: { stepSize: 1 }
                }
            }
        }
    });
</script>
